{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAMaA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,WACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCPbC,G,MAAW,SAAAR,GAAK,OAEzB,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAEtB,aADA,CACC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCTtBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC0CjEG,G,wDAvCX,aAAe,IAAD,8BACV,gBAcJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IAJP,E,qDASd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAOjD,WACI,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAiBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC1CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBACpD,OACI,sBAAKhC,UAAU,MAAf,UACI,oBAAII,GAAG,eAAP,8BAEA,cAAC,EAAD,CACIO,YAAY,iBACZC,aAAce,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAhClBK,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0bd4301d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\n\r\n\r\n\r\nexport const Card = props => (\r\n\r\n    <div className=\"card-container\">\r\n        <img\r\n            alt=\"monoster\"\r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h1>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport { Card } from '../card/card-component';\r\n\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => (\r\n\r\n    <div className=\"card-list\">\r\n        {\r\n            props.monsters.map(monster => (\r\n                // <h1 key={monster.id}>{monster.name}</h1>\r\n                <Card key={monster.id} monster={monster}></Card>\r\n            ))\r\n        }\r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange} />\r\n);","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n        // this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ monsters: users }))\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filterMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n        return (\n            <div className=\"App\" >\n                <h2 id=\"header-title\">Monsters Rolodex</h2>\n\n                <SearchBox\n                    placeholder='Search monster'\n                    handleChange={this.handleChange}\n                />\n                <CardList monsters={filterMonsters}></CardList>\n\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}